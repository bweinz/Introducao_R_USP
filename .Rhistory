install.packages("tidyverse")
library(tidyverse)
numeros <- c(1, 2, 3, 4, 5)
pessoas <- c("João", "Maria", "Pedro", "Paula")
logico <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE)
logico_2 <- c(T, F, T, T, F, F)
sequencia <- c(500:600)
varios_1 <- c(1, 2, 3, "Azul", "Verde", "Vermelho", TRUE, FALSE, TRUE)
library(tidyverse)
numeros <- c(1, 2, 3, 4, 5)
pessoas <- c("João", "Maria", "Pedro", "Paula")
logico <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE)
logico_2 <- c(T, F, T, T, F, F)
altura <- factor(c("alto", "médio", "alto", "baixo", "médio", "alto"),
levels = c("baixo", "médio", "alto"),
labels = c("prédios baixos",
"prédios médios",
"prédios altos"))
class(altura)
altura
respostas <- factor(c(1, 2, 2, 3, 1, 2, 3, 3, 1, 2, 1, 1, 3, 2, 3),
levels = c(1, 2, 3),
labels = c("discordo totalmente",
"não concordo, nem discordo",
"concordo totalmente"))
respostas
banco_dados_um <- data.frame(var1 = c("pessoa 1", "pessoa 2", "pessoa 3"),
var2 = c(42, 55, 28))
print(banco_dados_um)
View(banco_dados_um)
variavel_um <- c(1:10)
variavel_dois <- c(11:18, NA, NA)
variavel_tres <- c("a","b","c","d","e","f","g","h","i","j")
banco_dados_um <- data.frame(var1 = c("pessoa 1", "pessoa 2", "pessoa 3"),
var2 = c(42, 55, 28))
banco_dados_um <- data.frame(var1 = c("pessoa 1", "pessoa 2", "pessoa 3"),
var2 = c(42, 55, 28))
banco_dados_tres <- data.frame(posicao = variavel_um,
faltam = variavel_dois,
letras = variavel_tres)
View(banco_dados_tres)
variavel_um <- c(1:10)
variavel_dois <- c(11:18, NA, NA)
variavel_tres <- c("a","b","c","d","e","f","g","h","i","j")
banco_dados_tres <- data.frame(posicao = variavel_um,
faltam = variavel_dois,
letras = variavel_tres)
View(banco_dados_tres)
load("(2) desempenho_aluno_escola.RData")
library(readxl)
View(desempenho_aluno_escola)
View(desempenho_aluno_escola)
library(readxl)
preco <- read_excel("(2) precos_acao.xlsx")
View(preco)
View(preco)
pib_paises <- read.csv("(2) pib_paises.csv",
sep = ",",
dec = ".")
View(pib_paises)
View(pib_paises)
bndes <- read.csv("http://api.bcb.gov.br/dados/serie/bcdata.sgs.7415/dados?formato=csv&dataInicial=01/01/2010&dataFinal=31/12/2020",
sep = ";")
View(bndes)
View(bndes)
library(haven)
X_2_notas_fatorial <- read_sav("(2) notas_fatorial.sav")
View(X_2_notas_fatorial)
View(X_2_notas_fatorial)
View(X_2_notas_fatorial)
View(X_2_notas_fatorial)
View(X_2_notas_fatorial)
View(X_2_notas_fatorial)
save(banco_dados_um, file = "(3) dados_salvos_1.RData")
install.packages("writexl")
library("writexl")
View(desempenho_aluno_escola)
View(desempenho_aluno_escola)
load("(2) desempenho_aluno_escola.RData") # Se já estiver carregada, não precisa
View(desempenho_aluno_escola)
horas_estudo <- desempenho_aluno_escola$horas # Armazenando em um vetor
rm(horas_estudo)
# Quais são os valores de todas as variáveis para os alunos de 7 a 12?
desempenho_aluno_escola[c(7:12), ]
# Poderíamos reorganizar a ordem das variáveis
reorganiza <- desempenho_aluno_escola[ , c(2,5,3,4,1,6)]
View(desempenho_aluno_escola)
View(desempenho_aluno_escola)
# Poderíamos reorganizar a ordem das variáveis
reorganiza <- desempenho_aluno_escola[ , c(2,5,3,4,1,6)]
View(reorganiza)
View(reorganiza)
pib_paises <- pib_paises[-c(267:271),-c(2,4)]
View(pib_paises)
View(pib_paises)
nomes <- c("ano","paises_regioes","var_pib_capita","var_pib_total")
names(pib_paises) <- nomes
names(pib_paises) <- nomes
pib_paises$var_pib_capita_ajust <- as.numeric(pib_paises$var_pib_capita)
pib_paises$var_pib_total_ajust <- as.numeric(pib_paises$var_pib_total)
return(atual)
atualizar <- function(histórico) {
atual <- ((histórico + 17)/2)
return(atual)
}
View(atualizar)
atualizar_hoje <- c(1:15)
ajustar(200, 100)
ajustar <- function(valor1, valor2) {
ajuste <- ((valor1 + 180)/(valor2 - 60))
return(ajuste)
}
atualizar_teto <- function(histórico) {
atual <- ((histórico + 17)/2)
if (atual <= 100) {
return(atual)}
else {
return("Atualizado no Teto = 100")}
}
atualizar_teto(44)
atualizar_teto(199)
ajustar_mult <- function(valor1, valor2) {
ajuste <- ((valor1 + 180)/(valor2 - 60))
if(ajuste <= 100) {
return("baixo")}
else if(ajuste > 100 & ajuste <= 1000) {
return("médio")}
else {
return("alto")}
}
ajustar_mult(500, 300) # resultado = 2,8333
ajustar_mult(50000,100) # resultado = 1.254,50
ajustar_mult(1000, 70) # resultado = 118
médias <- function(x) {
media <- mean(x, na.rm = T)
return(media)
}
valores <- c(1, 4, 6, 9, 12, 16)
médias(valores)
for (i in atualizar_hoje) {
print((i + 17)/2)
}
valores <- 2
while(valores < 100){
valores <- (valores + 20)
print(valores)
}
library(ggplot2) # Obs.: se já tiver carregado o tidyverse, não precisa fazê-lo
install.packages(c("plotly","reshape2","ggrepel","rgl","car","sf","esquisse"))
options(rgl.debug = TRUE)
library(plotly)
library(reshape2)
library(ggrepel)
library(rgl)
library(car)
library(sf)
library(esquisse)
load("(2) perfil_investidor.RData")
View(perfil_investidor)
View(perfil_investidor)
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil))
perfil_investidor$perfil <- factor(perfil_investidor$perfil,
levels = c("Conservador",
"Moderado",
"Agressivo"))
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil))
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), fill = "magenta2") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", hjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
coord_flip() +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", vjust = 2) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", hjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
coord_flip() +
theme_light()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho))
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green") +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green") +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green", bins = 50) +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green", bins = 50) +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green", bins = 50) +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green") +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green", bins = 50) +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green", bins = 150) +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
load("(2) atlas_ambiental.RData")
View(atlas_ambiental)
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade, size = idade))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade, size = idade, color = favel < 6))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6,
shape = mortalidade > 18)) +
labs(title = "Indicadores dos Distritos do Município de São Paulo",
x = "Renda",
y = "Escolaridade") +
theme_bw()
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6,
shape = mortalidade > 18)) +
geom_smooth(aes(x = renda, y = escolaridade), method = "loess", se = FALSE) +
labs(title = "Indicadores dos Distritos do Município de São Paulo",
x = "Renda",
y = "Escolaridade") +
theme_bw()
library(readxl)
preco_acao <- read_excel("(2) precos_acao.xlsx")
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao))
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
geom_text(aes(x = data, y = preco, label = preco), size = 3, vjust = 2, angle = 45) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
geom_text(aes(x = data, y = preco, label = preco), size = 3, vjust = 2, angle = 45) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
geom_text(aes(x = data, y = preco, label = preco), size = 2, vjust = 2, angle = 45) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplotly(
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
)
tempo_dist <- read_excel("(2) tempo_dist.xls")
correlacoes <- cor(tempo_dist[, 2:4])
correlacoes
correlacoes_reorg <- melt(correlacoes)
View(correlacoes_reorg)
View(correlacoes)
View(correlacoes)
correlacoes_reorg <- melt(correlacoes)
View(correlacoes_reorg)
ggplot(correlacoes_reorg) +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
labs(x = "Variáveis",
y = "Variáveis",
fill = "Coef. Correl.")
ggplot(correlacoes_reorg) +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
geom_text(aes(x = Var1, y = Var2, label = value), size = 5) +
labs(x = "Variáveis",
y = "Variáveis",
fill = "Coef. Correl.") +
scale_fill_gradient2(low = "blue",
mid = "yellow",
high = "red",
midpoint = 0)
load("(2) atlas_ambiental.RData")
var_boxplot <- atlas_ambiental[,c(1,3)]
ggplot(var_boxplot) +
geom_boxplot(aes(y = renda), fill = "gray", color = "blue") +
labs(x = "Renda",
y = "Valores")
ggplotly(
ggplot(var_boxplot) +
geom_boxplot(aes(y = renda), fill = "gray", color = "blue") +
labs(x = "Renda",
y = "Valores")
)
load("(2) desempenho_aluno_escola.RData")
var_z <- scale(desempenho_aluno_escola[,3:5])
desempenho_z <- cbind(desempenho_aluno_escola[,2], var_z)
mean(desempenho_z$desempenho)
sd(desempenho_z$desempenho)
mean(desempenho_z$horas)
sd(desempenho_z$horas)
mean(desempenho_z$texp)
sd(desempenho_z$texp)
desemp_reorg_z <- melt(desempenho_z, id.vars = "estudante")
ggplot(desemp_reorg_z) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
labs(x = "Variáveis",
y = "Valores Z-Score")
ggplotly(
ggplot(desemp_reorg_z) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
labs(x = "Variáveis",
y = "Valores Z-Score")
)
esquisser(atlas_ambiental, viewer = "browser")
altura <- factor(c("alto", "médio", "alto", "baixo", "médio", "alto"),
levels = c("baixo", "médio", "alto"),
labels = c("prédios baixos",
"prédios médios",
"prédios altos"))
print(altura)
print(altura)
valores <- 2
while(valores < 100){
valores <- (valores + 20)
print(valores)
}
